import 'package:date_picker_timeline/date_picker_widget.dart';
import 'package:doctorapp/Model/userclass.dart';
import 'package:doctorapp/Screens/appbar.dart';
import 'package:doctorapp/Screens/drawer.dart';
import 'package:doctorapp/Screens/futerbuilder.dart';
import 'package:doctorapp/service/service.dart';
import 'package:flutter/material.dart';
import 'package:hexcolor/hexcolor.dart';

class DoctorScreen extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    return DoctorState();
  }
}

class DoctorState extends State<DoctorScreen> {
  DatePickerController _controller = DatePickerController();
  DateTime _selectedValue = DateTime.now();

  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppbarWidget.getAppBar('hj'),
      drawer: Drawer_Screen(),
      floatingActionButton: FloatingActionButton(
        tooltip: 'Increment',
        onPressed: () {  },
        child: Icon(Icons.add),
      ),
      body: Container(
        child: Column(
          children: [
            /// Search Bar Design
            Container(
              child: Column(
                children: [
                  Container(
                    width: 1000,
                    height: 30,
                    color: Colors.blue,
                  ),
                  FractionalTranslation(
                    translation: Offset(0, -0.5),
                    child: Align(
                      child: Card(
                        child: Container(
                          child: TextFormField(
                            decoration: InputDecoration(
                                hintText: 'Search patients',
                                border: InputBorder.none,
                                suffixIcon: Icon(Icons.search)),
                          ),
                          height: 50,
                          width: 300,
                          margin: const EdgeInsets.only(left: 20, right: 20),
                          decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(30)),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
              // color: Colors.green,
              //margin: const EdgeInsets.only(top: 20),
            ),

            /// Date Time picker
            Container(
              child: DatePicker(
                DateTime.now(),
                width: 60,
                height: 80,
                controller: _controller,
                initialSelectedDate: DateTime.now(),
                selectionColor: Colors.black,
                selectedTextColor: Colors.white,
                // inactiveDates: [
                //   DateTime.now().add(Duration(days: 2)),
                //   DateTime.now().add(Duration(days: 4)),
                //   DateTime.now().add(Duration(days: 7))
                // ],
                onDateChange: (date) {
                  // New date selected
                  setState(() {
                    _selectedValue = date;
                  });
                },
              ),
            ),
            Container(
              decoration: BoxDecoration(
                color: HexColor('#FBE4D2'),
                borderRadius: BorderRadius.only(
                  topLeft: Radius.circular(50),
                ),
              ),
              child: Container(
                margin: const EdgeInsets.only(top: 50),
                child: FutureBuilder<List<Autogenerated>>(
                  future: fetchJSONData(),
                  builder: (context, snapshot) {
                    if (!snapshot.hasData)
                      return Center(child: CircularProgressIndicator());

                    return ListView(
                      children: snapshot.data
                          .map(
                            (user) => Card(
                              child: ListTile(
                                leading: Icon(
                                  Icons.bookmark,
                                  color: Colors.green,
                                ),
                                title: Text(user.name),
                                subtitle: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(user.doctor),
                                    SizedBox(height: 20,),
                                    Text(user.nywc),
                                  ],
                                ),
                                trailing: Column(
                                  crossAxisAlignment: CrossAxisAlignment.end,
                                  children: [
                                    Text(user.time),
                                    SizedBox(height: 24,),
                                    Text(user.task),
                                  ],
                                ),
                              ),
                            ),
                          )
                          .toList(),
                    );
                  },
                ),
              ),
              height: 400,
            )
          ],
        ),
      ),
    );
  }
}
